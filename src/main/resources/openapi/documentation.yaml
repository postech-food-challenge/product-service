openapi: "3.1.0"
info:
  title: "products_ms API"
  description: "products_ms API"
  version: "1.0.0"
servers:
  - url: "https://0.0.0.0:8080"
paths:
  /v1/products:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductRequest"
        required: true
      responses:
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductResponse"
  /v1/products/{id}:
    delete:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "number"
      responses:
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Product deleted"
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "number"
      responses:
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductResponse"
    put:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "number"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductRequest"
        required: true
      responses:
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductResponse"
  /v1/products/category/{category}:
    get:
      description: ""
      parameters:
        - name: "category"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExceptionResponse"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ProductResponse"
components:
  schemas:
    ExceptionResponse:
      type: "object"
      properties:
        message:
          type: "string"
        code:
          type: "integer"
          format: "int32"
      required:
        - "message"
    CreateProductRequest:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        image:
          type: "string"
        price:
          type: "integer"
          format: "int32"
        category:
          type: "string"
      required:
        - "name"
        - "description"
        - "image"
        - "category"
    ProductResponse:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
        image:
          type: "string"
        price:
          type: "integer"
          format: "int32"
        category:
          type: "string"
      required:
        - "name"
        - "description"
        - "image"
        - "category"
    UpdateProductRequest:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        image:
          type: "string"
        price:
          type: "integer"
          format: "int32"
        category:
          type: "string"
      required:
        - "name"
        - "description"
        - "image"
        - "category"